{"version":3,"sources":["API/api.js","API/Characters/Charaters.js","components/FilterInput/FilterInput.jsx","components/NothingFound/NothingFound.jsx","components/Pagination/Pagination.jsx","components/CharactersPage/CharactersCard/CharacterCard.jsx","components/CharactersPage/CharactersList/CharactersList.jsx","components/CharactersPage/CharactersPage.jsx","API/Episodes/Episodes.js","components/EpisodesPage/EpisodeCard/EpisodeCard.jsx","components/EpisodesPage/EpisodesList/EpisodesList.jsx","components/EpisodesPage/EpisodesPage.jsx","API/Locations/Locations.js","components/LocationPage/LocationField/LocationField.jsx","components/LocationPage/LocationList/LocationList.jsx","components/LocationPage/LocationPage.jsx","components/Navigation/Navigation.jsx","components/WhatchListPage/WatchList/WatchList.jsx","components/WhatchListPage/WatchListPage.jsx","App.jsx","index.js"],"names":["request","endpoint","a","fetch","response","json","getCharacters","endPoint","allCharacters","FilterInput","type","value","onChange","placeholder","event","target","NothingFound","className","src","alt","Pagination","currentPageId","pageCount","onClick","paginationButtons","i","push","count","aria-label","disabled","tabitem","map","item","key","classNames","active","CharacterCard","character","name","gender","image","id","status","species","location","style","width","data-toggle","data-target","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","CharactersList","characters","CharactersPage","useState","setCurrentPageId","setPageCount","defaultCharacters","setDefaultCharacters","filteredCharacters","setFilteredCharacters","setSpecies","setStatus","setGender","useEffect","then","data","results","info","pages","useMemo","result","filter","toLowerCase","startsWith","length","pageId","getEpisodes","allEpisodes","EpisodeCard","movie","episode","air_date","EpisodesList","movies","scope","Fragment","EpisodesPage","defaultEpisodes","setDefaultEpisodes","filteredEpisodes","setFilteredEpisodes","setName","TextField","label","getLocations","allLocations","LocationField","dimension","LocationList","locations","LocationPage","defaultLocations","setDefaultLocations","filteredLocations","setFilteredLocations","setType","setDimension","fullWidth","margin","InputLabelProps","shrink","Navigation","setPage","currentPage","WatchList","todos","deleteTodo","changeStatus","todo","readOnly","checked","Button","variant","color","WatchListPage","defaultTodos","setDefaultTodos","filteredTodos","setFilteredTodos","nameToFilter","setNameToFilter","statusToFilter","setStatusToFilter","newTodoName","setnewTodoName","watchList","JSON","parse","window","localStorage","getItem","String","open","setOpen","onSubmit","preventDefault","newTodo","setItem","stringify","newWatchList","minLength","required","FormControl","Select","labelId","onClose","onOpen","MenuItem","newTodos","App","page","pageToRender","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f671471a.chunk.js","sourcesContent":["const BASE_URL = 'https://rickandmortyapi.com/api';\n\nexport const request = async(endpoint) => {\n  const response = await fetch(`${BASE_URL}${endpoint}`);\n  const json = await response.json();\n\n  return json;\n};\n","import { request } from '../api';\n\nexport const getCharacters = async(endPoint) => {\n  const allCharacters = await request(`/character${endPoint || ''}`);\n\n  return allCharacters;\n};\n","import React from 'react';\n\nexport const FilterInput = ({\n  type = 'text',\n  value,\n  onChange,\n  placeholder,\n }) => {\n  const handleChange = (event) => {\n    const { value } = event.target;\n\n    onChange(value);\n  };\n\n  return (\n    <input\n      type={type}\n      value={value}\n      onChange={handleChange}\n      placeholder={placeholder}\n    />\n  );\n};\n","import React from 'react';\nimport './NothingFound.scss';\n\nexport const NothingFound = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"nothingFound\">\n        <h2>Nothing found</h2>\n        <img\n          src=\"https://static.posters.cz/image/1300/%D0%9F%D0%BB%D0%B0%D0%BA%D0%B0%D1%82%D0%B8/rick-morty-season-4-i86560.jpg\"\n          alt=\"nothing found\"\n          className=\"nothingFound-img\"\n        />\n      </div>\n    </div>\n  );\n};\n\n","import React from 'react';\nimport classNames from 'classnames';\nimport './Pagination.scss';\n\nexport const Pagination = ({ currentPageId, pageCount, onClick }) => {\n  const paginationButtons = [];\n\n  if (pageCount > 11) {\n    switch (true) {\n      case currentPageId <= 6:\n        for (let i = 1; i < 11; i += 1) {\n          paginationButtons.push(i);\n        }\n\n        break;\n\n      case currentPageId >= pageCount - 4:\n        for (let i = pageCount - 9, count = 0; count < 10; count += 1, i += 1) {\n          paginationButtons.push(i);\n        }\n\n        break;\n\n      default:\n        for (let i = currentPageId - 4, count = 0;\n          count < 9;\n          count += 1, i += 1\n        ) {\n          paginationButtons.push(i);\n        }\n    }\n  } else {\n    for (let i = 1; i <= pageCount; i += 1) {\n      paginationButtons.push(i);\n    }\n  }\n\n  return (\n    <nav aria-label=\"...\" className=\"container pagination-container\">\n      <ul className=\"pagination\">\n        <li\n          disabled={currentPageId === 1}\n          className=\"page-item\"\n        >\n          <button\n            className=\"page-link\"\n            type=\"button\"\n            tabitem=\"-1\"\n            onClick={() => onClick(currentPageId - 1)}\n          >\n            Previous\n          </button>\n        </li>\n\n        {currentPageId > 6 && (\n          <>\n            <li value=\"1\">\n              <button\n                type=\"button\"\n                className=\"page-link\"\n                onClick={() => onClick('1')}\n              >\n                1\n              </button>\n            </li>\n\n            <li disabled>\n              <button\n                type=\"button\"\n                className=\"page-link\"\n              >\n                ...\n              </button>\n            </li>\n          </>\n        )}\n\n        {paginationButtons.map(item => (\n          <li\n            key={item}\n            className={classNames(\n              'page-item',\n              { active: item === currentPageId },\n            )}\n            value={item}\n          >\n            <button\n              type=\"button\"\n              className=\"page-link\"\n              onClick={() => onClick(item)}\n            >\n              {item}\n              {item === currentPageId\n                && <span className=\"sr-only\">(current)</span>}\n            </button>\n          </li>\n        ))}\n\n        {currentPageId < pageCount - 5 && (\n          <>\n            <li disabled>\n              <button\n                type=\"button\"\n                className=\"page-link\"\n              >\n                ...\n              </button>\n            </li>\n\n            <li value={pageCount}>\n              <button\n                type=\"button\"\n                className=\"page-link\"\n                onClick={() => onClick(pageCount)}\n              >\n                {pageCount}\n              </button>\n            </li>\n          </>\n        )}\n\n        <li className=\"page-item\" disabled={currentPageId === pageCount}>\n          <button\n            className=\"page-link\"\n            type=\"button\"\n            onClick={() => onClick(currentPageId + 1)}\n            disabled={currentPageId === pageCount}\n          >\n            Next\n          </button>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n","import React from 'react';\nimport './CharactersCard.scss';\n\nexport const CharacterCard = ({ character }) => {\n  const {\n    name, gender, image, id,\n    status, species, type, location,\n  } = character;\n\n  return (\n    <div\n      className=\"CharactersList__card CharacterCard card\"\n      style={{ width: '18rem' }}\n      data-toggle=\"modal\"\n      data-target=\"#exampleModalCenter\"\n    >\n      <img src={image} alt={name} className=\"CharacterCard__image\" />\n      <div className=\"card-body\">\n        <div className=\"card-text\">\n          {`Name: ${name}`}\n        </div>\n        <div>\n          {`Gender: ${gender}`}\n        </div>\n        <div>\n          {`Status: ${status}`}\n        </div>\n      </div>\n\n      {/* <!-- Button trigger modal --> */}\n      <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"modal\" data-target={`#Character_${id}`} key={id}>\n        See details\n      </button>\n\n      {/* <!-- Modal --> */}\n      <div className=\"modal fade\" id={`Character_${id}`} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">\n                {`${name}`}\n              </h5>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <img src={image} alt={name} className=\"CharacterCard__image\" />\n              <div>\n                {`Name: ${name}`}\n              </div>\n              <div>\n                {`Status: ${status}`}\n              </div>\n              <div>\n                {`Species: ${species}`}\n              </div>\n              <div>\n                {type && `Type: ${type}`}\n              </div>\n              <div>\n                {`Gender: ${gender}`}\n              </div>\n              <div>\n                {`Planet: ${location.name}`}\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button type=\"button\" className=\"btn btn-warning\" data-dismiss=\"modal\">Close</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { CharacterCard } from '../CharactersCard';\n\nimport './CharactersList.scss';\n\nexport const CharactersList = ({ characters }) => {\n\n  return (\n    <div className=\"CharactersList\">\n      <ul className=\"CharactersList__list\">\n        {characters.map(character => (\n          <li key={character.id} className=\"CharactersList__item\">\n            <CharacterCard character={character} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\n\nimport { getCharacters } from '../../API/Characters/Charaters';\nimport { FilterInput } from '../FilterInput/FilterInput';\nimport { NothingFound } from '../NothingFound/NothingFound';\nimport { Pagination } from '../Pagination';\nimport { CharactersList } from './CharactersList';\n\n\nimport './CharactersPage.scss';\n\nexport const CharactersPage = () => {\n  const [currentPageId, setCurrentPageId] = useState(1);\n  const [pageCount, setPageCount] = useState(null);\n\n  const [defaultCharacters, setDefaultCharacters] = useState([]);\n  const [\n    filteredCharacters,\n    setFilteredCharacters,\n  ] = useState(defaultCharacters);\n  const [species, setSpecies] = useState('');\n  const [status, setStatus] = useState('');\n  const [gender, setGender] = useState('');\n\n  useEffect(() => {\n    getCharacters()\n      .then((data) => {\n        setDefaultCharacters(data.results);\n        setFilteredCharacters(data.results);\n        setPageCount(data.info.pages);\n      });\n  }, []);\n\n  useEffect(() => {\n    getCharacters(`?page=${currentPageId}`)\n      .then((data) => {\n        setDefaultCharacters(data.results);\n        setFilteredCharacters(data.results);\n      });\n  }, [currentPageId]);\n\n  useMemo(() => {\n    let result = defaultCharacters;\n\n    if (species) {\n      result = result.filter(\n        character => character.species.toLowerCase()\n          .startsWith(species.toLowerCase()),\n      );\n    }\n\n    if (status) {\n      result = result.filter(\n        character => character.status === status,\n      );\n    }\n\n    if (gender) {\n      result = result.filter(\n        character => character.gender === gender,\n      );\n    }\n\n    if (species.length === 0 && status.length === 0 && gender.length === 0) {\n      setFilteredCharacters(defaultCharacters);\n    } else {\n      setFilteredCharacters(result);\n    }\n  }, [species, status, gender, defaultCharacters]);\n\n  const changePage = (pageId) => {\n    setSpecies('');\n    setStatus('');\n    setGender('');\n    setCurrentPageId(pageId);\n  };\n\n  return (\n    <div className=\"CharactersPage\">\n      <div className=\"CharactersPage__filterBlock\">\n        <FilterInput\n          value={species}\n          onChange={setSpecies}\n          placeholder=\"Species\"\n        />\n\n        <select value={status} onChange={event => setStatus(event.target.value)}>\n          <option value=\"\">All status</option>\n          <option value=\"Alive\">Alive</option>\n          <option value=\"Dead\">Dead</option>\n          <option value=\"unknown\">unknown</option>\n        </select>\n\n        <select value={gender} onChange={event => setGender(event.target.value)}>\n          <option value=\"\">All gender</option>\n          <option value=\"unknown\">unknown</option>\n          <option value=\"Female\">Famale</option>\n          <option value=\"Male\">Male</option>\n          <option value=\"Genderless\">Genderless</option>\n        </select>\n      </div>\n\n      {filteredCharacters.length > 0\n        ? <CharactersList characters={filteredCharacters} />\n        : <NothingFound />\n      }\n      {pageCount && (\n        <Pagination\n          currentPageId={currentPageId}\n          pageCount={pageCount}\n          onClick={changePage}\n        />\n      )}\n    </div>\n  );\n};\n","import { request } from '../api';\n\nexport const getEpisodes = async(endPoint) => {\n  const allEpisodes = await request(`/episode${endPoint || ''}`);\n\n  return allEpisodes;\n};\n","import React from 'react';\n\nexport const EpisodeCard = ({ movie }) => {\n  const { id, episode, name, air_date, characters } = movie;\n\n  return (\n    <tr key={id}>\n      <td>{episode}</td>\n      <td>{name}</td>\n      <td>{air_date}</td>\n      <td>{characters.length}</td>\n    </tr>\n  );\n}\n\n","import React from 'react';\nimport { EpisodeCard } from '../EpisodeCard/EpisodeCard';\n\nimport './EpisodesList.scss';\n\nexport const EpisodesList = ({ movies }) => {\n\n  return (\n    <div className=\"EpisodesList\">\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Episode №</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Air date</th>\n            <th scope=\"col\">Characters</th>\n          </tr>\n        </thead>\n        <tbody>\n          {movies.map(movie => (\n            <React.Fragment key={movie.id}>\n              <EpisodeCard movie={movie} />\n            </React.Fragment>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import { TextField } from '@material-ui/core';\nimport React, { useState, useMemo, useEffect } from 'react';\n\nimport { getEpisodes } from '../../API/Episodes/Episodes';\nimport { NothingFound } from '../NothingFound/NothingFound';\nimport { Pagination } from '../Pagination';\n\nimport { EpisodesList } from './EpisodesList';\n\nimport './EpisodesPage.scss';\n\nexport const EpisodesPage = () => {\n  const [currentPageId, setCurrentPageId] = useState(1);\n  const [pageCount, setPageCount] = useState(null);\n\n  const [defaultEpisodes, setDefaultEpisodes] = useState([]);\n  const [\n    filteredEpisodes,\n    setFilteredEpisodes,\n  ] = useState(defaultEpisodes);\n  const [name, setName] = useState('');\n\n  useEffect(() => {\n    getEpisodes()\n      .then((data) => {\n        setDefaultEpisodes(data.results);\n        setFilteredEpisodes(data.results);\n        setPageCount(data.info.pages);\n      });\n  }, []);\n\n  useEffect(() => {\n    getEpisodes(`?page=${currentPageId}`)\n      .then((data) => {\n        setDefaultEpisodes(data.results);\n        setFilteredEpisodes(data.results);\n      });\n  }, [currentPageId]);\n\n  useMemo(() => {\n    let result = defaultEpisodes;\n\n    if (name) {\n      result = result.filter(\n        character => character.name.toLowerCase()\n          .startsWith(name.toLowerCase()),\n      );\n    }\n\n    if (name.length === 0) {\n      setFilteredEpisodes(defaultEpisodes);\n    } else {\n      setFilteredEpisodes(result);\n    }\n  }, [name, defaultEpisodes]);\n\n  const changePage = (pageId) => {\n    setName('');\n    setCurrentPageId(pageId);\n  };\n\n  return (\n    <div className=\"EpisodesPage container\">\n      <div>\n        <TextField\n          id=\"standard-secondary\"\n          label=\"Filter episodes by Name\"\n          // color=\"warning\"\n          value={name}\n          onChange={event => setName(event.target.value)}\n          className=\"EpisodesPage__filter\"\n        />\n        {filteredEpisodes.length > 0\n          ? <EpisodesList movies={filteredEpisodes} />\n          : <NothingFound />\n        }\n      </div>\n\n      <Pagination\n        currentPageId={currentPageId}\n        pageCount={pageCount}\n        onClick={changePage}\n      />\n    </div>\n  );\n};\n","import { request } from '../api';\n\nexport const getLocations = async(endPoint) => {\n  const allLocations = await request(`/location${endPoint || ''}`);\n\n  return allLocations;\n};\n","import React from 'react';\n\nexport const LocationField = ({ location }) => {\n  const { name, type, dimension } = location;\n\n  return (\n    <tr>\n      <td>{name}</td>\n      <td>{type}</td>\n      <td>{dimension}</td>\n    </tr>\n  );\n};\n","import React from 'react';\n\nimport { LocationField } from '../LocationField';\n\nexport const LocationList = ({ locations }) => {\n\n  return (\n    <>\n      {locations.map(location => (\n        <React.Fragment key={location.id}>\n          <LocationField location={location} />\n        </React.Fragment>\n      ))}\n    </>\n  );\n};\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { TextField } from '@material-ui/core';\nimport { getLocations } from '../../API/Locations/Locations';\nimport { Pagination } from '../Pagination';\nimport { LocationList } from './LocationList';\n\nimport './LocationPage.scss';\nimport { NothingFound } from '../NothingFound/NothingFound';\n\nexport const LocationPage = () => {\n  const [currentPageId, setCurrentPageId] = useState(1);\n  const [pageCount, setPageCount] = useState(null);\n\n  const [defaultLocations, setDefaultLocations] = useState([]);\n  const [\n    filteredLocations,\n    setFilteredLocations,\n  ] = useState(defaultLocations);\n  const [name, setName] = useState('');\n  const [type, setType] = useState('');\n  const [dimension, setDimension] = useState('');\n\n  useEffect(() => {\n    getLocations()\n      .then((data) => {\n        setDefaultLocations(data.results);\n        setFilteredLocations(data.results);\n        setPageCount(data.info.pages);\n      });\n  }, []);\n\n  useEffect(() => {\n    getLocations(`?page=${currentPageId}`)\n      .then((data) => {\n        setDefaultLocations(data.results);\n        setFilteredLocations(data.results);\n      });\n  }, [currentPageId]);\n\n  useMemo(() => {\n    let result = defaultLocations;\n\n    if (name) {\n      result = result.filter(\n        location => location.name.toLowerCase()\n          .startsWith(name.toLowerCase()),\n      );\n    }\n\n    if (type) {\n      result = result.filter(\n        location => location.type.toLowerCase()\n          .startsWith(type.toLowerCase()),\n      );\n    }\n\n    if (dimension) {\n      result = result.filter(\n        location => location.dimension.toLowerCase()\n          .startsWith(dimension.toLowerCase()),\n      );\n    }\n\n    if (name.length === 0 && type.length === 0 && dimension.length === 0) {\n      setFilteredLocations(defaultLocations);\n    } else {\n      setFilteredLocations(result);\n    }\n  }, [name, type, dimension, defaultLocations]);\n\n  const changePage = (pageId) => {\n    setName('');\n    setType('');\n    setDimension('');\n    setCurrentPageId(pageId);\n  };\n\n  return (\n    <div className=\"LocationPage\">\n      <div className=\"container\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">\n                <TextField\n                  label=\"Name\"\n                  placeholder=\"Filter by Name\"\n                  fullWidth\n                  margin=\"normal\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={name}\n                  onChange={event => setName(event.target.value)}\n                />\n              </th>\n\n              <th scope=\"col\">\n                <TextField\n                  label=\"Type\"\n                  placeholder=\"Filter by Type\"\n                  fullWidth\n                  margin=\"normal\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={type}\n                  onChange={event => setType(event.target.value)}\n                />\n              </th>\n\n              <th scope=\"col\">\n                <TextField\n                  label=\"Dimension\"\n                  placeholder=\"Fulter by Dimension\"\n                  fullWidth\n                  margin=\"normal\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={dimension}\n                  onChange={event => setDimension(event.target.value)}\n                />\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredLocations.length > 0\n              && <LocationList locations={filteredLocations} />\n            }\n          </tbody>\n        </table>\n        {filteredLocations.length === 0 && <NothingFound />}\n      </div>\n\n      <Pagination\n        currentPageId={currentPageId}\n        pageCount={pageCount}\n        onClick={changePage}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport './Navigation.scss';\n\nexport const Navigation = ({ setPage, currentPage }) => {\n\n  return (\n    <div className=\"Navigation\">\n      <div className=\"Navigation__img-block\">\n        <img\n          className=\"Navigation__image\"\n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b1/Rick_and_Morty.svg/799px-Rick_and_Morty.svg.png\"\n          alt=\"Logotype\"\n        />\n      </div>\n      <nav className=\"nav\">\n        <ul className=\"nav__list\">\n          <li className=\"nav__item\">\n            <button\n              className={classNames('nav__link', { 'nav__link--active': currentPage === 'Characters' })}\n              type=\"button\"\n              onClick={() => setPage('Characters')}\n            >\n              Characters\n            </button>\n          </li>\n          <li className=\"nav__item\">\n            <button\n              className={classNames('nav__link', { 'nav__link--active': currentPage === 'Episodes' })}\n              type=\"button\"\n              onClick={() => setPage('Episodes')}\n            >\n              Episodes\n            </button>\n          </li>\n          <li className=\"nav__item\">\n            <button\n              className={classNames('nav__link', { 'nav__link--active': currentPage === 'Location' })}\n              type=\"button\"\n              onClick={() => setPage('Location')}\n            >\n              Location\n            </button>\n          </li>\n          <li className=\"nav__item\">\n            <button\n              className={classNames('nav__link', { 'nav__link--active': currentPage === 'WatchListPage' })}\n              type=\"button\"\n              onClick={() => setPage('WatchListPage')}\n            >\n              Watch List\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\nimport React from 'react';\nimport classNames from 'classnames';\n\nimport './WatchList.scss';\nimport { Button } from '@material-ui/core';\n\nexport const WatchList = ({ todos, deleteTodo, changeStatus }) => {\n  return (\n    <div className=\"container\">\n      <ul className=\"WatchList__list\">\n        {todos.map((todo) => {\n          const { id, name, status } = todo;\n\n          return (\n            <li\n              key={id}\n              className={classNames(\n                'WatchList__item',\n                `WatchList__item--${status ? 'checked' : 'unchecked'}`,\n              )}\n            >\n              <label>\n                <input type=\"checkbox\" readOnly checked={status} />\n                <p onClick={() => changeStatus(id)}>\n                  {name}\n                </p>\n              </label>\n\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => deleteTodo(id)}\n              >\n                Delete\n              </Button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { FormControl, MenuItem, Select, TextField } from '@material-ui/core';\n\nimport { WatchList } from './WatchList';\nimport './WatchListPage.scss';\nimport { NothingFound } from '../NothingFound/NothingFound';\n\nconst localStorageKey = 'watchList';\n\nexport const WatchListPage = () => {\n  const [defaultTodos, setDefaultTodos] = useState([]);\n  const [\n    filteredTodos,\n    setFilteredTodos,\n  ] = useState(defaultTodos);\n  const [nameToFilter, setNameToFilter] = useState('');\n  const [statusToFilter, setStatusToFilter] = useState('all');\n\n  const [newTodoName, setnewTodoName] = useState('');\n\n  useEffect(() => {\n    const watchList = JSON.parse(window.localStorage.getItem(localStorageKey));\n\n    if (watchList) {\n      setDefaultTodos(watchList);\n    }\n  }, []);\n\n  useMemo(() => {\n    let result = defaultTodos;\n\n    if (nameToFilter) {\n      result = result.filter(\n        todo => todo.name.toLowerCase()\n          .startsWith(nameToFilter.toLowerCase()),\n      );\n    }\n\n    if (statusToFilter !== 'all') {\n      result = result.filter(todo => String(todo.status) === statusToFilter);\n    }\n\n    if (nameToFilter.length === 0 && statusToFilter === 'all') {\n      setFilteredTodos(defaultTodos);\n    } else {\n      setFilteredTodos(result);\n    }\n  }, [nameToFilter, statusToFilter, defaultTodos]);\n\n  function addNewTodo(event) {\n    event.preventDefault();\n\n    const watchList = JSON.parse(window.localStorage.getItem(localStorageKey));\n\n    const newTodo = {\n      id: watchList ? watchList[watchList.length - 1].id + 1 : 1,\n      name: newTodoName,\n      status: false,\n    };\n\n    window.localStorage.setItem(localStorageKey, JSON.stringify(\n      watchList ? [...watchList, newTodo] : [newTodo],\n    ));\n\n    const newWatchList = JSON.parse(window.localStorage.getItem(localStorageKey));\n\n    setnewTodoName('');\n    setDefaultTodos(newWatchList);\n  }\n\n  function deleteTodo(id) {\n    const newTodos = defaultTodos.filter(todo => todo.id !== id);\n\n    window.localStorage.setItem(localStorageKey, JSON.stringify(newTodos));\n    setDefaultTodos(newTodos);\n  }\n\n  function changeStatus(id) {\n    const newTodos = defaultTodos.map(todo => (todo.id === id\n      ? {\n        ...todo,\n        status: !todo.status,\n      }\n      : { ...todo }));\n\n    window.localStorage.setItem(localStorageKey, JSON.stringify(newTodos));\n    setDefaultTodos(newTodos);\n  }\n\n  const [open, setOpen] = useState(false);\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div className=\"WatchListPage container\">\n      <div>\n        <form onSubmit={addNewTodo}>\n          <div className=\"input-group WatchListPage__add-block\">\n            <input\n              type=\"text\"\n              name=\"EpisodeName\"\n              value={newTodoName}\n              onChange={event => setnewTodoName(event.target.value)}\n              className=\"WatchListPage__add-input\"\n              minLength=\"5\"\n              required\n            />\n            <button\n              type=\"submit\"\n              className=\"btn btn-warning\"\n            >\n              Add episode to watch list\n            </button>\n          </div>\n        </form>\n      </div>\n\n      <div className=\"WatchListPage__filterBlock\">\n        <div className=\"WatchListPage__filterName\">\n          <TextField\n            id=\"standard-full-width\"\n            label=\"Name\"\n            placeholder=\"Filter by Name\"\n            fullWidth\n            margin=\"normal\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            value={nameToFilter}\n            onChange={event => setNameToFilter(event.target.value)}\n          />\n        </div>\n\n        <div className=\"WatchListPage__filterStatus\">\n          <FormControl>\n            <Select\n              labelId=\"demo-controlled-open-select-label\"\n              id=\"demo-controlled-open-select\"\n              open={open}\n              onClose={handleClose}\n              onOpen={handleOpen}\n              value={statusToFilter}\n              onChange={event => setStatusToFilter(event.target.value)}\n            >\n              <MenuItem value=\"all\">All</MenuItem>\n              <MenuItem value=\"true\">Completed</MenuItem>\n              <MenuItem value=\"false\">Not Completed</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n      </div>\n\n      {filteredTodos.length > 0\n        ? (\n          <WatchList\n            todos={filteredTodos}\n            deleteTodo={deleteTodo}\n            changeStatus={changeStatus}\n          />\n        )\n        : <NothingFound />\n        }\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { CharactersPage } from './components/CharactersPage/CharactersPage';\nimport { EpisodesPage } from './components/EpisodesPage/EpisodesPage';\nimport { LocationPage } from './components/LocationPage';\nimport { Navigation } from './components/Navigation/Navigation';\nimport { WatchListPage } from './components/WhatchListPage';\nimport './styles/general.scss';\n\nconst App = () => {\n  const [page, setPage] = useState('Characters');\n\n  function pageToRender() {\n    switch (page) {\n      case 'Characters':\n        return <CharactersPage />;\n\n      case 'Episodes':\n        return <EpisodesPage />;\n\n      case 'Location':\n        return <LocationPage />;\n\n      case 'WatchListPage':\n        return <WatchListPage />;\n\n      default:\n        return <div>Hello</div>;\n    }\n  }\n\n  return (\n    <>\n      <div className=\"App__nav\">\n        <Navigation setPage={setPage} currentPage={page} />\n      </div>\n\n      <div className=\"App__body\">\n        {pageToRender()}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}